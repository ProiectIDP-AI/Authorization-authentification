version: "3.8"

services:
  redis:
    image: redislabs/redismod
    container_name: redis
    networks:
      - backend
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  io:
    image: io-flask
    container_name: io
    networks:
      - backend
    ports:
      - "5000:5000"
    volumes:
      - .:/io
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
  

  auth:
    image: auth
    container_name: auth
    networks:
      - backend
    ports:
      - "6000:6000"
    depends_on:
      - redis
      - io
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  bl:
    image: bl
    container_name: bl
    networks:
      - backend
    ports:
      - "7000:7000"
    depends_on:
      - redis
      - auth
      - io
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: redisinsight
    networks:
      - backend
    ports:
      - '8001:8001'

  kong:
    image: kong:latest
    networks:
      - backend
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    environment:
      - KONG_DATABASE=off
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    deploy:
      placement:
        constraints:
          - node.role == manager

networks:
  backend:

volumes:
  redis_data: