version: "3.8"

services:
  redis:
    image: redislabs/redismod
    container_name: redis
    networks:
      - backend
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  io:
    image: andreiionut1411/io:latest
    container_name: io
    networks:
      - backend
    # logging:
    #     driver: loki
    #     options:
    #         loki-url: http://host.docker.internal:3100/loki/api/v1/push
    #         loki-external-labels: job=myjob,owner=radu,environment=development
    ports:
      - "5000:5000"
    volumes:
      - .:/io
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379


  auth:
    image: andreiionut1411/auth:latest
    container_name: auth
    networks:
      - backend
    ports:
      - "6000:6000"
    depends_on:
      - redis
      - io
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  bl:
    image: andreiionut1411/business_logic:latest
    container_name: bl
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    networks:
      - backend
    ports:
      - "7000:7000"
    depends_on:
      - redis
      - auth
      - io
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  redisinsight:
    image: redis/redisinsight:latest
    container_name: redisinsight
    depends_on:
      - redis
    networks:
      - backend
    ports:
      - '5540:5540'

  kong:
    image: kong:latest
    networks:
      - backend
    ports:
      - "80:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    volumes:
      - ./kong.yml:/etc/kong/kong.yml  # Mount Kong configuration file
    environment:
      - KONG_DATABASE=off
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
      - KONG_DECLARATIVE_CONFIG=/etc/kong/kong.yml
    deploy:
      placement:
        constraints:
          - node.role == manager

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - backend
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/config.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - redis

  node_exporter:
    image: prom/node-exporter
    deploy:
        mode: global
    volumes:
        - /proc:/host/proc:ro
        - /sys:/host/sys:ro
        - /:/rootfs:ro
    command:
        - '--path.procfs=/host/proc'
        - '--path.rootfs=/rootfs'
        - '--path.sysfs=/host/sys'
        - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
        - 9100:9100
    networks:
        - backend

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    deploy:
        mode: global
    volumes:
        - /:/rootfs:ro
        - /var/run:/var/run:ro
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
        - /dev/disk:/dev/disk/:ro
    ports:
        - 8080:8080
    networks:
        - backend


  loki:
    image: grafana/loki:latest
    container_name: loki
    user: root
    networks:
      - backend
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki.yml:/etc/config/loki.yml
      - ../configs/loki/wal:/wal
    entrypoint:
      - /usr/bin/loki
      - -config.file=/etc/config/loki.yml

  promtail:
    image:  grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail/promtail.yml:/promtail/promtail.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/promtail/promtail.yml
    depends_on:
      - loki
    networks:
      - backend

networks:
  backend:

volumes:
  redis_data:
  grafana_data:
